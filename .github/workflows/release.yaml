name: release
on:
  create:
    tags:
      - v*
  push:
    branches:
      - main

permissions: read-all

jobs:
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    strategy:
        matrix:
          os: [linux, darwin, windows]
          arch: [amd64, arm64]
    steps:
      - name: Checkout source code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v4.2.2
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # pin@5.5.0
        with:
          go-version: '${{ env.GOLANG_VERSION }}'

      - name: Run unit tests
        run: make test-coverage

      - name: Build Helm Binaries
        run: |
          set -eu -o pipefail

          make build-cross VERSION="${{ github.ref_name }}"

      - name: Package artifact
        run: |
          cd _dist/${{ matrix.os }}-${{ matrix.arch }}
          if [[ "${{ matrix.os }}" == "windows" ]]; then
              zip -r ../../us-api-provider-${{ github.ref_name }}-${{ matrix.os }}-${{ matrix.arch }}.zip .
          else
              tar -czf ../../us-api-provider-${{ github.ref_name }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz .
          fi
        shell: bash

      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ github.ref_name }}
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
      
      - name: upload linux artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./us-api-provider-${{ github.ref_name }}-linux-${{ matrix.arch }}.tar.gz
          asset_name: us-api-provider-${{ github.ref_name }}-linux-${{ matrix.arch }}.tar.gz
          asset_content_type: application/gzip

      - name: upload darwin artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./us-api-provider-${{ github.ref_name }}-darwin-${{ matrix.arch }}.tar.gz
          asset_name: us-api-provider-${{ github.ref_name }}-darwin-${{ matrix.arch }}.tar.gz
          asset_content_type: application/gzip

      - name: upload windows artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./us-api-provider-${{ github.ref_name }}-windows-${{ matrix.arch }}.zip
          asset_name: us-api-provider-${{ github.ref_name }}-windows-${{ matrix.arch }}.zip
          asset_content_type: application/zip